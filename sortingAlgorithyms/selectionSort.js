// *********************************************************************************************************
// SELECTION SORT
// *********************************************************************************************************
const selectionSort = (array) => {
  for (let i = 0; i < array.length; i++) {
    let small = i;
    for (let j = i + 1; j < array.length; j++) {
      if (array[small] > array[j]) {
        small = j;
      }
    }

    if (small !== i) {
      [array[small], array[i]] = [array[i], array[small]];
    }
  }

  console.log(array);
};

selectionSort([2, 5, 3, 8, 5, 4, 6]);
// *********************************************************************************************************

// *********************************************************************************************************
// BUBBLE SORT
// *********************************************************************************************************
function bubbleSort(arr) {
  const n = arr.length;

  for (let i = 0; i < n; i++) {
    for (let j = 0; j < n - 1 - i; j++) {
      if (arr[j] > arr[j + 1]) {
        [arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];
      }
    }
  }

  console.log(arr);
}

bubbleSort([2, 5, 10, 3, 8, 5, 4, 6]);
// *********************************************************************************************************

// *********************************************************************************************************
// INSERTION SORT
// *********************************************************************************************************
function insertionSort(arr) {
  for (let i = 1; i < arr.length; i++) {
    let key = arr[i];
    let j = i - 1;

    while (j >= 0 && arr[j] > key) {
      arr[j + 1] = arr[j];
      j = j - 1;
    }
    arr[j + 1] = key;
  }
  console.log(arr);
}

bubbleSort([2, 5, 10, 3, 8, 5, 4, 6]);
// *********************************************************************************************************
